---
import type { MarkdownHeading } from "astro";
type Props = {
  headings: MarkdownHeading[];
};
type HeadingWithSubheadings = MarkdownHeading & {
  subheadings: MarkdownHeading[];
};
const { headings } = Astro.props;
const grouppedHeadings = headings.reduce((array, heading) => {
  if (heading.depth === 2) {
    array.push({ ...heading, subheadings: [] });
  } else if (heading.depth === 3) {
    array.at(-1)?.subheadings.push(heading);
  }
  return array;
}, [] as HeadingWithSubheadings[]);
---

<ol>
  {
    grouppedHeadings.map((h) => (
      <li>
        <a href={`#${h.slug}`}>{h.text}</a>
        {h.subheadings.length > 0 && (
          <ol>
            {h.subheadings.map((sub) => (
              <li>
                <a href={`#${sub.slug}`}>{sub.text}</a>
              </li>
            ))}
          </ol>
        )}
      </li>
    ))
  }
</ol>

<style>
  .active-toc-item {
    font-weight: bold;
  }
</style>
